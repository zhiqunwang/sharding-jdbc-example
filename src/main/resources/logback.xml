<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE RelativeLayou>
<configuration scan="false" scanPeriod="60 seconds" debug="false">

	<!-- 定义日志文件位置 -->
	<property name="log_dir" value="/data/log/tc-account" />

	<!-- 日志最大历史30天 -->
	<property name="maxHistory" value="30" />

	<!-- 输出格式 -->
	<property name="patternLayout"
		value="%d{yyyy-MM-dd HH:mm:ss:SSS}|%-5level|%thread|%logger-%L| - %msg%n" />
	<!-- 建议生产环境DEBUG和INFO等级日志使用此输出格式，不输出行号以提搞性能 -->
	<property name="patternLayout-not-line"
		value="%d{yyyy-MM-dd HH:mm:ss:SSS}|%-5level|%thread|%logger| - %msg%n" />


	<!-- 控制台输出日志 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${patternLayout-not-line}</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- 控制台输出日志到指定文件, 不使用标准输入输出 -->
	<appender name="CONSOLE_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log_dir}/catalina_%d{yyyyMMdd}/account-provider.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${patternLayout}</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- DEBUG输出日志文件 <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
		<FileNamePattern>${log_dir}/debug/debug-%d{yyyy-MM-dd}.log</FileNamePattern> 
		<maxHistory>${maxHistory}</maxHistory> </rollingPolicy> <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder"> 
		<charset>UTF-8</charset> <layout class="ch.qos.logback.classic.PatternLayout"> 
		<pattern>${patternLayout-not-line}</pattern> </layout> </encoder> <filter 
		class="ch.qos.logback.classic.filter.LevelFilter"> <level>DEBUG</level> <onMatch>ACCEPT</onMatch> 
		<onMismatch>DENY</onMismatch> </filter> </appender> -->

	<!-- INFO输出日志文件 -->
	<appender name="INFO_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log_dir}/info/info-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${patternLayout-not-line}</pattern>
			</layout>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>  <!-- 只打印Info日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<!-- WARN输出日志文件 -->
	<appender name="WARN_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log_dir}/warn/warn-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${patternLayout}</pattern>
			</layout>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>  <!-- 只打印Warn日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<!-- ERROR输出日志文件 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log_dir}/error/error-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<charset>UTF-8</charset>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${patternLayout}</pattern>
			</layout>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>  <!-- 只打印Error日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 异步输出DEBUG日志 <appender name="DEBUG_ASYNC" class="ch.qos.logback.classic.AsyncAppender"> 
		<discardingThreshold>0</discardingThreshold> <queueSize>512</queueSize> <appender-ref 
		ref="DEBUG_FILE" /> </appender> -->

	<!-- 异步输出所有日志 -->
	<appender name="CONSOLE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="CONSOLE_FILE" />
	</appender>


	<!-- 异步输出INFO日志 -->
	<appender name="INFO_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="INFO_FILE" />
	</appender>
	<!-- 异步输出WARN日志 -->
	<appender name="WARN_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="WARN_FILE" />
	</appender>
	<!-- 异步输出ERROR日志 -->
	<appender name="ERROR_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="ERROR_FILE" />
	</appender>

	<logger name="org.elvis.wang.dal.dao.AccountShardingMapper">
		<level>DEBUG</level>
	</logger>

	<!-- 过滤不必要的日志 -->
	<logger name="org.springframework" level="WARN" />
	<logger name="io.netty" level="WARN" />
	<logger name="ch.qos" level="WARN" />
	<logger name="org.apache" level="WARN" />
	<logger name="org.jboss" level="WARN" />
	<logger name="ch.qos.logback" level="WARN" />
	<logger name="com.mchange" level="WARN" />
	<logger name="org.mybatis" level="DEBUG" />
	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	<logger name="com.alibaba.fastjson" level="WARN" />
	<logger name="com.alibaba.dubbo" level="INFO" />
	<logger name="com.baidu.disconf" level="INFO" />
	<logger name="com.google.code.yanf4j" level="INFO" />
	<logger name="net.rubyeye.xmemcached.impl" level="INFO" />

	<!-- root级别 -->
	<root level="DEBUG">

		<!-- 控制台输出 -->
		<appender-ref ref="CONSOLE" />

		<!-- 控制台异步输出到指定文件 -->
		<appender-ref ref="CONSOLE_ASYNC" />

		<!-- 文件输出 -->
		<!--<appender-ref ref="DEBUG_ASYNC" /> -->
		<appender-ref ref="INFO_ASYNC" />
		<appender-ref ref="WARN_ASYNC" />
		<appender-ref ref="ERROR_ASYNC" />

	</root>

</configuration>